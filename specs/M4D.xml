<?xml version="1.0"?>
<!DOCTYPE signalml SYSTEM "SignalML_2_0.dtd">
<signalml>

	<header>
		<text_info>SignalML definition for 4D format</text_info>
	</header>


	<file id='main' type='text'>
		<!---->
		<param id='number_of_channels' type='int'>
			<pattern>"MSI.MegChanCount: ([0-9]*)"</pattern>
			<group>1</group>
		</param>

		<param id='sampling_frequency' type='float' units='Hz'>
			<pattern>"MSI.SampleFrequency: ([0-9]+.[0-9]*)"</pattern>
			<group>1</group>
		</param>

		<param id='number_of_samples' type='int'>
			<expr>slices_per_epoch * total_epochs </expr>
		</param>

		<param id='meg_chan_index' type='str'>
			<pattern>"MSI.MegChanIndex: ([0-9,]+)$"</pattern>
			<group>1</group>
		</param>

		<param id='total_epochs' type='int'>
			<pattern>"MSI.TotalEpochs: ([0-9]*)"</pattern>
			<group>1</group>
		</param>

		<param id='slices_per_epoch' type='int'>
			<pattern>"MSI.SlicesPerEpoch: ([0-9]*)"</pattern>
			<group>1</group>
		</param>

		<param id='total_channels' type='int'>
			<pattern>"MSI.TotalChannels: ([0-9]*)"</pattern>
			<group>1</group>
		</param>

		<param id='data_filename' type='str'>
			<pattern>"MSI.FileDescriptor: (.+;){4}([a-zA-Z0-9,._-]+)"</pattern>
			<group>2</group>
		</param>

		<param id='sample_unit' type='float'>
			<expr>1</expr>
		</param>

		<param id='unit' type='str'>
			<expr>'Î¼V'</expr>
		</param>

		<param id='calibration_gain' type='float'>
			<expr>1.0e15</expr>
		</param>

		<file id='data_file' type='binary' filename='data_filename'>
		</file>

		<param id='msi_format' type='str'>
			<pattern>"MSI.Format: ([a-zA-Z]+)"</pattern>
			<group>1</group>
		</param>

		<if id='size' test='msi_format == "SHORT"'>
			<param id='sample_size_1' type='int'>
				<expr>2</expr>
			</param>

			<else-if test='msi_format == "LONG"'>
				<param id='sample_size_1' type='int'>
					<expr>4</expr>
				</param>

				<else>  <!-- test='msi_format == "FLOAT"'> -->
					<param id='sample_size_1' type='int'>
						<expr>4</expr>
					</param>
				</else>
			</else-if>

		</if>

		<if id='format' test='msi_format == "SHORT"'>
			<param id='sample_format_1' type='str'>
				<expr>"&gt;i2"</expr>
			</param>

			<else-if test='msi_format == "LONG"'>
				<param id='sample_format_1' type='str'>
					<expr>"&gt;i4"</expr>
				</param>

				<else>  <!-- test='msi_format == "FLOAT"'> -->
					<param id='sample_format_1' type='str'>
						<expr>"&gt;f4"</expr>
					</param>
				</else>
			</else-if>

		</if>

<!--   TODO: apply if-else for DOUBLE format
		<else-if id='format' test='msi_format == "LONG"'>
			<param id='sample_size_1' type='int'>
				<expr>4</expr>
			</param>
			<param id='sample_format_1' type='str'>
				<expr>"&gt;i4"</expr>
			</param>
		</else-if>
 -->

		<param id='sample_size' type='int'>
			<expr>size.sample_size_1</expr>
		</param>

		<param id='sample_format' type='str'>
			<expr>str(format.sample_format_1)</expr>
		</param>

		<channelset id='data_test'>

			<for-each id='channels' var='index' sequence='range(number_of_channels)'
				type='int'>
				<channel mapping='mapping' format='sample_format' length='number_of_samples'
					data='data_file' />


				<param id='channel_name' type='str'>
					<pattern>single_channel_name_pattern</pattern>
					<group>2</group>
				</param>

				<param id='channel_type_name' type='str'>
					<expr>'MEG'</expr>
				</param>

				<param id='single_channel_name_pattern' type='str'>
					<expr>"MSI.MegChanNames: ([a-zA-Z0-9]+,){" + str(index) +
						"}([A-Za-z0-9]+)"</expr>
				</param>

				<param id='channel_index' type='int'>
					<pattern>single_channel_index_pattern</pattern>
					<group>2</group>
				</param>

				<param id='single_channel_index_pattern' type='str'>
					<expr>"MSI.MegChanIndex: ([0-9]+,){" + str(index) + "}([0-9]+)"</expr>
				</param>

				<param id='mapping' type='int'>
					<arg type='int' name='sample' />
					<expr>(sample*total_channels + channel_index -1) * sample_size</expr>
				</param>

			</for-each>
		</channelset>


	</file>

</signalml>

